#!/usr/bin/env sh

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# global settings
yabai -m config mouse_follows_focus          on
yabai -m config focus_follows_mouse          off
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config window_shadow                float
yabai -m config window_opacity               off
yabai -m config normal_window_opacity 	     0.85
yabai -m config active_window_opacity        1.0
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 on
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config window_border                off
yabai -m config window_border_width          2
yabai -m config normal_window_border_color   0x00f7f7f7
yabai -m config active_window_border_color   0xff399ee6
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config window_origin_display	     cursor

# general space settings
yabai -m config layout                       bsp
yabai -m config window_gap                   10
yabai -m config top_padding                  3
yabai -m config bottom_padding               3
yabai -m config left_padding                 3
yabai -m config right_padding                3

#yabai -m config --space $(yabai -m query --displays | jq 'map(select(.index==2)) | .[0].spaces[0]') top_padding 33
#yabai -m config --space $(yabai -m query --displays | jq 'map(select(.index==2)) | .[0].spaces[1]') top_padding 33
#yabai -m config --space $(yabai -m query --displays | jq 'map(select(.index==2)) | .[0].spaces[2]') top_padding 33
#yabai -m config --space $(yabai -m query --displays | jq 'map(select(.index==2)) | .[0].spaces[3]') top_padding 33
#yabai -m config --space $(yabai -m query --displays | jq 'map(select(.index==2)) | .[0].spaces[4]') top_padding 33

#rules
yabai -m rule --add title="^.*Preferences$" manage=off
yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="System Preferences" app="^System Preferences$" manage=off
yabai -m rule --add label="Messages" app="^Messages$" layer=above manage=off
yabai -m rule --add label="Signal" app="^Signal$" layer=above manage=off
yabai -m rule --add label="FaceTime" app="^FaceTime$" layer=above manage=off
yabai -m rule --add label="App Store" app="^App Store$" manage=off
yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
yabai -m rule --add label="Calculator" app="^Calculator$" layer=above manage=off
yabai -m rule --add label="Colorpicker" app="^Colorpicker$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="Archive Utility" app="^Archive Utility$" manage=off
yabai -m rule --add label="Dwarf Fortress" app="^dwarfort.exe$" manage=off
yabai -m rule --add label="mpv" app="^mpv$" manage=off
yabai -m rule --add label="Ryujinx" app="^Ryujinx$" manage=off
yabai -m rule --add label="iTerm2" app="^iTerm2$" manage=off
yabai -m rule --add label="ncmpcpp" app="^ncmpcpp$" manage=off
# yabai -m rule --add label="Notion" app="^Notion$" manage=off
yabai -m rule --add label="Bitwarden" app="^Bitwarden$" layer=above manage=off sticky=on
yabai -m rule --add label="java" app="^java$" manage=off
yabai -m rule --add label="xLights" app="^xLights$" manage=off
yabai -m rule --add label="Steam" app="^Steam$" manage=off
yabai -m rule --add label="Loom" app="^Loom$" manage=off
yabai -m rule --add label="Stickies" app="^Stickies$" manage=off
yabai -m rule --add label="Todoist" app="^Todoist$" manage=off
yabai -m rule --add label="FontForge" app="^FontForge$" manage=off
yabai -m rule --add label="Charlie" app="^Charlie$" manage=off

#signals
#yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
#yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
